Git - is a version control system
commandline interface - CLI 
 repository - project folder where your project is located
Github - Website to host your repositories online

GIT COMMANDS
============
clone - allows you to use a repository that is hosted somewhere else on your local machine
add - for tracking changes in your project
comit - save your files in Git
push - upload git commits to a remote repo like Github
pull - doownload changes from a remote repoo to your local machine
 
 CONFIGURING GIT
 ===============
 git config --global user.name "your name"
 git config --global user.email "your@email.com"

 INITIALIZING A REPOSITORY 
 =========================
 git init 

 CHECKING THE STATUS 
 ===================
 - to check the status of yur repo
 git status 

 COMMITING 
 ==========
 - Its a two step process , add into the staging area then run commit 
 git add filename //adding the file 
 git add . //for adding every file that has a change that needs a commit 
 git status // checking the status of the commit
 git commit -m "description of the changes that the new commit is going to do"
 git log //shows all the commints to thr current repo


COMIT HISTORY
==============
- To retrack your previous commits and make changes
git checkout commit-harsh
git checkout master // to go back to the master branch after the checkout commit-harsh which breaks you out the master


BRANCHES
=========
-individual timeline for your project commits
git branch // lists out all the branches in the current repo

CREATING A NEW BRANCHES
=======================
git branch new-branch-name // adds a new branch in the master in the current repo

MRERGING THE VARIOUS BRANCHES
==============================
-merging the branches to the master
git merge branchName // 






 